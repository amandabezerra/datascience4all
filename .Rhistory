knitr::opts_chunk$set(echo = TRUE)
setwd(".")
library(jsonlite)
library(readr)
library(ggplot2)
library(stringr)
library(tidyr)
library(readxl)
library(listviewer)
library(dplyr)
library(scales)
library(tm)
library(wordcloud)
source("elattes.ls2df.R")
cic_profile <- jsonlite::fromJSON("cic_profile.json")
comp_profile <- jsonlite::fromJSON("comp_profile.json")
mat_profile <- jsonlite::fromJSON("mat_profile.json")
length(cic_profile)
length(comp_profile)
length(mat_profile)
cic_advise <- jsonlite::fromJSON("cic_advise.json")
comp_advise <- jsonlite::fromJSON("comp_advise.json")
mat_advise <- jsonlite::fromJSON("mat_advise.json")
names(cic_advise)
cic_publication <- jsonlite::fromJSON("cic_publication.json")
comp_publication <- jsonlite::fromJSON("comp_publication.json")
mat_publication <- jsonlite::fromJSON("mat_publication.json")
for (i in 1:length(cic_publication)){
print(names(cic_publication[i]))
print(cic_publication[[i]] %>%
sapply(function(x)
length(x$ano)) %>% sum())
}
publication_tipo_cic <- cic_publication %>%
sapply(function(x)
sapply(x, function(x)
length(x$autores)))
publication_tipo_cic
for (i in 6:9){
print(names(cic_advise[i]))
print(cic_advise[[i]] %>%
sapply(function(x)
length(x$ano)))
}
cic_publication$EVENTO %>%
sapply(function(x)
(x$pais_do_evento)) %>%
unlist() %>% table() %>%
sort(decreasing = TRUE)
for (i in 1:length(cic_advise)){
print(names(cic_advise[i]))
print(cic_advise[[i]] %>%
sapply(function(x)
length(x$ano)) )
}
cic_profile %>%
sapply(function(x) unique(x$areas_de_atuacao$sub_area)) %>%
unlist() %>% table() %>% sort(decreasing = TRUE) %>%
as.data.frame() %>% filter(!. == "")
cic_public.periodico.df <- pub.ls2df(cic_publication, 1) #artigos
cic_public.livros.df <- pub.ls2df(cic_publication, 2) #livros
cic_public.textojornais.df <- pub.ls2df(cic_publication, 4) #textos em jornais
cic_public.eventos.df <- pub.ls2df(cic_publication, 5) #eventos
cic_orient.posdoutorado.df <- ori.ls2df(cic_advise, 6) #pos-Doutorado concluído
cic_orient.doutorado.df <- ori.ls2df(cic_advise, 7) #Doutorado concluído
cic_orient.mestrado.df <- ori.ls2df(cic_advise, 8) #Mestrado concluído
cic_orient.df <- rbind(rbind(cic_orient.posdoutorado.df, cic_orient.doutorado.df), cic_orient.mestrado.df)
ggplot(cic_orient.df,aes(ano, fill=factor(natureza))) +
geom_bar(stat = "count",position='dodge') +
ggtitle("Natureza das Orientações") +
theme(legend.position="right",legend.text=element_text(size=7)) +
guides(fill=guide_legend(nrow=5, byrow=TRUE, title.position = "top")) +
labs(x="Ano",y="Quantidade")+labs(fill="Natureza")+theme_bw(base_size = 10)+
geom_text(hjust=0.6,
vjust=-0.4,
size=3,color='black',
position = position_dodge(width=0.9),
stat = "count", aes(group=factor(natureza),
label=formatC(..count.., big.mark=",")),
check_overlap = TRUE)
cic_public.periodico.df %>%
ggplot(aes(x = ano)) + geom_bar(aes(fill=ano)) +
geom_text(stat = "count", aes(label=formatC(..count.., big.mark=",")),vjust=-0.1) +
theme_bw()+labs(x="Ano",y="Quantidade de Periódicos") +
scale_y_continuous(labels = comma)
cic_public.livros.df %>%
group_by(pais_de_publicacao) %>%
summarise(Quantidade = n()) %>%
filter(pais_de_publicacao != "Brasil") %>%
ggplot(aes(x = reorder(pais_de_publicacao, (Quantidade)), y = Quantidade)) +
geom_col(fill = "coral")+
geom_text(aes(label=comma(Quantidade)),
hjust=-0.2,
vjust=0.3,
size=3.5) + coord_flip() +
labs(title = "Publicação de Livros em Países Estrangeiros", x = "Países", y = "Quantidade de Livros")+
theme_bw()
cic_public.eventos.df %>%
group_by(pais_do_evento) %>%
summarise(Quantidade = n()) %>%
filter(pais_do_evento != "Brasil") %>%
ggplot(aes(x = reorder(pais_do_evento, (Quantidade)), y = Quantidade)) +
geom_col(fill = "coral3")+
geom_text(aes(label=comma(Quantidade)),
hjust=-0.2,
vjust=0.3,
size=2.5)+ coord_flip() +
labs(title = "Eventos", x = "Países", y = "Quantidade de Eventos") + theme_bw()
knitr::include_graphics('./cic_publications_ano.png')
for (i in 1:length(comp_publication)){
print(names(comp_publication[i]))
print(comp_publication[[i]] %>%
sapply(function(x)
length(x$ano)) %>% sum())
}
publication_tipo_comp <- comp_publication %>%
sapply(function(x)
sapply(x, function(x)
length(x$autores)))
publication_tipo_comp
for (i in 6:9){
print(names(comp_advise[i]))
print(comp_advise[[i]] %>%
sapply(function(x)
length(x$ano)))
}
comp_publication$EVENTO %>%
sapply(function(x)
(x$pais_do_evento)) %>%
unlist() %>% table() %>%
sort(decreasing = TRUE)
for (i in 1:length(comp_advise)){
print(names(comp_advise[i]))
print(comp_advise[[i]] %>%
sapply(function(x)
length(x$ano)) )
}
comp_profile %>%
sapply(function(x) unique(x$areas_de_atuacao$sub_area)) %>%
unlist() %>% table() %>% sort(decreasing = TRUE) %>%
as.data.frame() %>% filter(!. == "")
comp_public.periodico.df <- pub.ls2df(comp_publication, 1) #artigos
comp_public.livros.df <- pub.ls2df(comp_publication, 2) #livros
comp_public.textojornais.df <- pub.ls2df(comp_publication, 4) #textos em jornais
comp_public.eventos.df <- pub.ls2df(comp_publication, 5) #eventos
comp_orient.posdoutorado.df <- ori.ls2df(comp_advise, 6) #pos-Doutorado concluído
comp_orient.doutorado.df <- ori.ls2df(comp_advise, 7) #Doutorado concluído
comp_orient.mestrado.df <- ori.ls2df(comp_advise, 8) #Mestrado concluído
comp_orient.df <- rbind(rbind(comp_orient.posdoutorado.df, comp_orient.doutorado.df), comp_orient.mestrado.df)
ggplot(comp_orient.df,aes(ano, fill=factor(natureza))) +
geom_bar(stat = "count",position='dodge') +
ggtitle("Natureza das Orientações") +
theme(legend.position="right",legend.text=element_text(size=7)) +
guides(fill=guide_legend(nrow=5, byrow=TRUE, title.position = "top")) +
labs(x="Ano",y="Quantidade")+labs(fill="Natureza")+theme_bw(base_size = 10)+
geom_text(hjust=0.6,
vjust=-0.4,
size=3,
color='black',
position = position_dodge(width=0.9),
stat = "count",
aes(group=factor(natureza),
label=formatC(..count.., big.mark=",")),
check_overlap = TRUE)
comp_public.periodico.df %>%
ggplot(aes(x = ano)) + geom_bar(aes(fill=ano)) +
geom_text(stat = "count", aes(label=formatC(..count..,
big.mark=",")),
vjust=-0.1) +
theme_bw()+labs(x="Ano",y="Quantidade de Periódicos") +
scale_y_continuous(labels = comma)
comp_public.livros.df %>%
group_by(pais_de_publicacao) %>%
summarise(Quantidade = n()) %>%
filter(pais_de_publicacao != "Brasil") %>%
ggplot(aes(x = reorder(pais_de_publicacao, (Quantidade)), y = Quantidade)) +
geom_col(fill = "coral")+
geom_text(aes(label=comma(Quantidade)),
hjust=-0.2,
vjust=0.3,
size=3.5) + coord_flip() +
labs(title = "Publicação de Livros em Países Estrangeiros", x = "Países", y = "Quantidade de Livros")+
theme_bw()
comp_public.eventos.df %>%
group_by(pais_do_evento) %>%
summarise(Quantidade = n()) %>%
filter(pais_do_evento != "Brasil") %>%
ggplot(aes(x = reorder(pais_do_evento, (Quantidade)), y = Quantidade)) +
geom_col(fill = "coral3")+
geom_text(aes(label=comma(Quantidade)),
hjust=-0.2,
vjust=0.3,
size=2.5)+ coord_flip() +
labs(title = "Eventos", x = "Países", y = "Quantidade de Eventos") + theme_bw()
for (i in 1:length(mat_publication)){
print(names(mat_publication[i]))
print(mat_publication[[i]] %>%
sapply(function(x)
length(x$ano)) %>% sum())
}
publication_tipo_mat <- mat_publication %>%
sapply(function(x)
sapply(x, function(x)
length(x$autores)))
publication_tipo_mat
for (i in 6:9){
print(names(mat_advise[i]))
print(mat_advise[[i]] %>%
sapply(function(x)
length(x$ano)))
}
mat_publication$EVENTO %>%
sapply(function(x)
(x$pais_do_evento)) %>%
unlist() %>% table() %>%
sort(decreasing = TRUE)
for (i in 1:length(mat_advise)){
print(names(mat_advise[i]))
print(mat_advise[[i]] %>%
sapply(function(x)
length(x$ano)) )
}
mat_profile %>%
sapply(function(x) unique(x$areas_de_atuacao$sub_area)) %>%
unlist() %>% table() %>% sort(decreasing = TRUE) %>%
as.data.frame() %>% filter(!. == "")
mat_public.periodico.df <- pub.ls2df(mat_publication, 1) #artigos
mat_public.livros.df <- pub.ls2df(mat_publication, 2) #livros
mat_public.textojornais.df <- pub.ls2df(mat_publication, 4) #textos em jornais
mat_public.eventos.df <- pub.ls2df(mat_publication, 5) #eventos
mat_orient.posdoutorado.df <- ori.ls2df(mat_advise, 6) #pos-Doutorado concluído
mat_orient.doutorado.df <- ori.ls2df(mat_advise, 7) #Doutorado concluído
mat_orient.mestrado.df <- ori.ls2df(mat_advise, 8) #Mestrado concluído
mat_orient.df <- rbind(rbind(mat_orient.posdoutorado.df, mat_orient.doutorado.df), mat_orient.mestrado.df)
ggplot(mat_orient.df,aes(ano, fill=factor(natureza))) +
geom_bar(stat = "count",position='dodge') +
ggtitle("Natureza das Orientações") +
theme(legend.position="right",legend.text=element_text(size=7)) +
guides(fill=guide_legend(nrow=5, byrow=TRUE, title.position = "top")) +
labs(x="Ano",y="Quantidade")+labs(fill="Natureza")+theme_bw(base_size = 10)+
geom_text(hjust=0.6,
vjust=-0.4,
size=3,color='black',
position = position_dodge(width=0.9),
stat = "count",
aes(group=factor(natureza),
label=formatC(..count.., big.mark=",")),
check_overlap = TRUE)
mat_public.periodico.df %>%
ggplot(aes(x = ano)) + geom_bar(aes(fill=ano)) +
geom_text(stat = "count", aes(label=formatC(..count.., big.mark=",")),vjust=-0.1) +
theme_bw()+labs(x="Ano",y="Quantidade de Periódicos") +
scale_y_continuous(labels = comma)
mat_public.livros.df %>%
group_by(pais_de_publicacao) %>%
summarise(Quantidade = n()) %>%
filter(pais_de_publicacao != "Brasil") %>%
ggplot(aes(x = reorder(pais_de_publicacao, (Quantidade)), y = Quantidade)) +
geom_col(fill = "coral")+
geom_text(aes(label=comma(Quantidade)),
hjust=-0.2,vjust=0.3,size=3.5) + coord_flip() +
labs(title = "Publicação de Livros em Países Estrangeiros",
x = "Países",
y = "Quantidade de Livros")+
theme_bw()
mat_public.eventos.df %>%
group_by(pais_do_evento) %>%
summarise(Quantidade = n()) %>%
filter(pais_do_evento != "Brasil") %>%
ggplot(aes(x = reorder(pais_do_evento, (Quantidade)), y = Quantidade)) +
geom_col(fill = "coral3")+
geom_text(aes(label=comma(Quantidade)),
hjust=-0.2,vjust=0.3,size=2.5)+ coord_flip() +
labs(title = "Eventos", x = "Países", y = "Quantidade de Eventos") + theme_bw()
library(igraph)
cic_graph <- jsonlite::fromJSON("cic_graph.json")
cic_nodes <- cic_graph$nodes
cic_nodes$properties <- NULL
cic_relations <- cic_graph$links
head(cic_nodes)
head(cic_relations)
graph_cic <- graph_from_data_frame(cic_relations, directed=TRUE, vertices=cic_nodes)
plot(graph_cic)
comp_graph <- jsonlite::fromJSON("comp_graph.json")
comp_nodes <- comp_graph$nodes
comp_nodes$properties <- NULL
comp_relations <- comp_graph$links
head(comp_nodes)
head(comp_relations)
graph_comp <- graph_from_data_frame(comp_relations, directed=TRUE, vertices=comp_nodes)
plot(graph_comp)
mat_graph <- jsonlite::fromJSON("mat_graph.json")
mat_nodes <- mat_graph$nodes
mat_nodes$properties <- NULL
mat_relations <- mat_graph$links
head(mat_nodes)
head(mat_relations)
graph_mat <- graph_from_data_frame(mat_relations, directed=TRUE, vertices=mat_nodes)
plot(graph_mat)
cic_publication.df <- data.frame()
for (i in 1:length(cic_publication[[1]]))
cic_publication.df <- rbind(cic_publication.df, cic_publication$PERIODICO[[i]])
cic_publication.df$autores <- gsub("\",\"|\", \"", "; ", cic_publication.df$autores)
cic_publication.df$autores <- gsub("\"|c\\(|\\)", "", cic_publication.df$autores)
cic_publication.df$`autores-endogeno` <- gsub(",", ";", cic_publication.df$`autores-endogeno`)
cic_publication.df$`autores-endogeno` <- gsub("\"|c\\(|\\)", "", cic_publication.df$`autores-endogeno`)
cic_publication.df$titulo <- iconv(cic_publication.df$titulo,from="UTF-8", to = "ASCII//TRANSLIT")
df_wc <- data.frame(doc_id = cic_publication.df$issn, text = cic_publication.df$titulo, stringsAsFactors = FALSE )
docs <- Corpus(DataframeSource(df_wc))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("pt"))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("universidade", "federal","computação","posgraduacao","ciência","matemática"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
set.seed(1234)
wordcloud(words =(d$word), freq = d$freq, min.freq = 3,
max.words=30,scale = c(4, 0.3), random.order=FALSE, rot.per=0.4,
colors=brewer.pal(8, "Dark2"))
comp_publication.df <- data.frame()
for (i in 1:length(comp_publication[[1]]))
comp_publication.df <- rbind(comp_publication.df, comp_publication$PERIODICO[[i]])
comp_publication.df$autores <- gsub("\",\"|\", \"", "; ", comp_publication.df$autores)
comp_publication.df$autores <- gsub("\"|c\\(|\\)", "", comp_publication.df$autores)
comp_publication.df$`autores-endogeno` <- gsub(",", ";", comp_publication.df$`autores-endogeno`)
comp_publication.df$`autores-endogeno` <- gsub("\"|c\\(|\\)", "", comp_publication.df$`autores-endogeno`)
comp_publication.df$titulo <- iconv(comp_publication.df$titulo,from="UTF-8", to = "ASCII//TRANSLIT")
df_wc <- data.frame(doc_id = comp_publication.df$issn, text = comp_publication.df$titulo, stringsAsFactors = FALSE )
docs <- Corpus(DataframeSource(df_wc))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("pt"))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("universidade", "federal","computação","posgraduacao","ciência","matemática"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
set.seed(1234)
wordcloud(words =(d$word), freq = d$freq, min.freq = 3,
max.words=30,scale = c(4, 0.3), random.order=FALSE, rot.per=0.4,
colors=brewer.pal(8, "Dark2"))
mat_publication.df <- data.frame()
for (i in 1:length(mat_publication[[1]]))
mat_publication.df <- rbind(mat_publication.df, mat_publication$PERIODICO[[i]])
mat_publication.df$autores <- gsub("\",\"|\", \"", "; ", mat_publication.df$autores)
mat_publication.df$autores <- gsub("\"|c\\(|\\)", "", mat_publication.df$autores)
mat_publication.df$`autores-endogeno` <- gsub(",", ";", mat_publication.df$`autores-endogeno`)
mat_publication.df$`autores-endogeno` <- gsub("\"|c\\(|\\)", "", mat_publication.df$`autores-endogeno`)
knitr::include_graphics('./images/cic_publications_ano.png')
